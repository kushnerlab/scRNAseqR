% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_analysis.R
\name{sample_analysis}
\alias{sample_analysis}
\title{Analyse individual samples}
\usage{
sample_analysis(
  samples_dir,
  sample_name,
  output_dir,
  features_of_interest,
  run_cell_cycle_regression = F,
  run_doublet_removal = T,
  doublet_removal_rate = NULL
)
}
\arguments{
\item{samples_dir}{Root directory of samples.}

\item{sample_name}{Current sample name, used to match in samples_dir.}

\item{output_dir}{Package home directory, used to create output directory for results.}

\item{run_cell_cycle_regression}{True/False to regress out genes to do with cell cycle, based on Tirosh et al, 2015.}

\item{run_doublet_removal}{default: TRUE, to run scDblFinder and call and remove doublets, plotted in QC}

\item{doublet_removal_rate}{default: NULL, automatic doublet removal detection rate, NULL for 10x data okay, otherwise base on sequencing protocol and amount of cells}
}
\description{
Performs Seurat SCTv2 analysis workflow on individual samples.
}
\note{
Paper writing & during development notes

Cell cycle regression based on: https://satijalab.org/seurat/articles/cell_cycle_vignette.html

SCTransform-v2 replaces NormalizeData + FindVariableFeatures + ScaleData & sets default assay to SCT
https://satijalab.org/seurat/articles/sctransform_vignette.html & https://satijalab.org/seurat/articles/sctransform_v2_vignette.html
normalize gene expression counts per cell by the total expression and applying a
scaling factor (default: 10.000) and adding a pseudocount before log-transforming the result
this global linear scaling on the data sets mean expression across cells is 0 and variance across cells is 1 as to
provide equal weight in downstream processing such that highly variable genes do not dominate results
SCTransform-v2 excludes the need for this heuristic pseudocount addition, log-transformation and optimizes variation
the top 3000 (default) variable genes are kept for improving downstream processing efficiency
vars.to.regress = regress out variability originating from reads mapped to mitochondrial DNA
return.only.var.genes = TRUE, as non-sparse matrix is returned and used in PCA
set transformed data as default data assay for downstream processing

Choosing cell-free droplet detection algorithm, EmptyNN based on comparison with CellRanger embedded EmptyDrops: https://www.cell.com/patterns/fulltext/S2666-3899(21)00154-9
Run before removing doublets/multiplets, possibly even before base QC of reming min.cells and min.features
Error, issued at: https://github.com/lkmklsmn/empty_nn/issues/4

Choosing doublet detection algorithm, DoubletFinder based on benchmerk: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7897250/
scDblFinder based on comparison with doubletFinder: https://f1000research.com/articles/10-979/v2
run scDblFinder between fundamental QC and SCTransform: https://github.com/plger/scDblFinder/issues/86
# for 10x data, you can leave scDblFinder(dbr) parameter NULL: https://bioconductor.org/packages/release/bioc/vignettes/scDblFinder/inst/doc/scDblFinder.html

Choosing ambient RNA removal algorithm, some are heavily dependent on pre-clustering etc, so SoupX: https://academic.oup.com/gigascience/article/9/12/giaa151/6049831?login=true

order of doublet, empty, ambient RNA removal unclear: https://github.com/plger/scDblFinder/issues/93
order by 10x Genomics: https://www.10xgenomics.com/analysis-guides/common-considerations-for-quality-control-filters-for-single-cell-rna-seq-data

discussion point: if we were to run ambient RNA removal first, then doublet/multiplet detection could be easier and more accurate
}
\examples{
\dontshow{if (FALSE) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# create output directories based on start time and sample name and set working directory
start_time <- format(Sys.time(), "\%F \%H-\%M-\%S")
output_dir <- file.path("EMC-SKlab-scRNAseq", "results", start_time)
# directory where samples are located
samples_dir <- file.path("EMC-SKlab-scRNAseq", "data", "samples", "project")
# selected sample names from sample dir
sample_names <- c('t1', 't2', 't3')

for (sample_name in sample_names) {
  individual_analysis(samples_dir, sample_name, output_dir)
}
\dontshow{\}) # examplesIf}
}
