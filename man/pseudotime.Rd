% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pseudotime.R
\name{pseudotime}
\alias{pseudotime}
\title{Run Monocle3 from Seurat object.}
\usage{
pseudotime(input_files, input_names, output_dir, genes_of_interest)
}
\arguments{
\item{input_files}{Character vector with paths to Seurat .rds files.}

\item{input_names}{Character vector with sample names of input files.}

\item{output_dir}{String containing output directory.}

\item{genes_of_interest}{Character vector with gene name(s) of interest, used to select pseudotime trajectory starting point.}
}
\description{
Run monocle3 from Seurat object, performing its own clustering, partitioning
and then creating a pseudotime trajectory and plots.
}
\note{
Notes during development

Seurat --> Monocle3 for pseudo time analysis - main site: https://cole-trapnell-lab.github.io/monocle3/

Monocle theory - from paper: https://www.nature.com/articles/s41586-019-0969-x
reduce dimensionality with UMAP (> t-SNE, also preserves global distance AND complexity O(N) versus O(Nlog[N]))
organize into Partitioned Approximate Graph Abstraction (PAGA) (construct k-nearest neighbor graph)
identify 'communities' (clusters) with Louvain (or Leiden) algorithm
PAGA -> graph where clusters = nodes, edged when more neighborly vs expected binomial (coarse-grained trajectory)

Monocle3 -> principal graph (SimplePPT-like, +faster, +large datasets, +trajectory loops, +prune branches)
SimplePPT paper coined reverse graph embedding (heavy math, I do not understand most of it)
uses 'landmark' cells (locally dense k-mean representation), more cells -> higher resolution but also runtime
pruning for smoothing and adding loops is performed at the end

compute pseudotime: geodesic distance (shortest-path edge distances) from node to root node (principal node)
map each cell to closest principal point with Euclidean distance in UMAP space
for each principal graph edge: map similarly to it's endpoints orthogonally (ref 22)
then order is defined and geodesic distance is computed as pseudotime

identify genes that vary in expression over a trajectory (spatial pseudotime)
Use Moran's I statistic: multi-directional and multi-dimensional spatial autocorrelation
intuitive explanation: for each cell pair and therein each gene
sum(multiply differences of gene expression vs gene mean expression for cell pairs & multiply by cell connection weight)
multiply sum by total cell pairs, normalize by total weight of cell interactions and static gene expression for each cell
0 = no change over trajectory, higher = relatively more change over trajectory
}
\examples{
EMC.SKlab.scRNAseq::pseudotime(
  input_files = c(file.path("path", "to", "seurat.rds")),
  input_names = c('sample_name'),
  output_dir = file.path(getwd(), "results", "test", "pseudotime"),
  genes_of_interest = c("GENES", "OF", "INTEREST")
)
}
